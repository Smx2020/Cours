#####Question 3 :
SELECT * FROM bbc WHERE nom = 'France'
revoie la ligne de bbc sur la France
Recupere tout le tableau

#####Question 4:
SELECT nom, population FROM bbc WHERE region = 'Europe'
Renvoie les noms et population des villes d'europe

[a] SELECT nom, superficie  FROM bbc WHERE region = 'Africa'
[b] SELECT nom, pib FROM bbc WHERE region = 'South Asia'
[c] SELECT superficie, pib FROM bbc WHERE nom = 'France'

#####Question 5
SELECT nom, population/superficie FROM bbc
renvoie le nom et la population divise par la superficie de toutes les entrees

[a] SELECT nom, pib/population as pib_par_habitant FROM bbc
[b] SELECT nom, population/superficie as densite FROM bbc

#####Question 6
SELECT nom, region FROM bbc WHERE population < 2000000 AND pib > 5000000000
on obtient le nom et la region qui ont un pib >5000000000 et une population <2000000

[b] SELECT nom,region FROM bbc WHERE superficie<2000 AND pib > 5000000000
[c] SELECT nom,superficie,pib/population FROM bbc WHERE nom LIKE'I%' OR nom LIKE'J%'
[d] SELECT nom,region,pib/population FROM bbc WHERE pib/population < 1000
[e] SELECT nom,region,pib/population FROM bbc WHERE pib/population < 1000 AND not region != 'Africa'

#####Question 7:
SELECT * FROM bbc union SELECT * FROM cia

[a] SELECT nom,superficie FROM bbc WHERE nom LIKE'Fr%'union SELECT nom,superficie FROM cia WHERE nom LIKE'Fr%'
[b] SELECT nom,region FROM bbc WHERE superficie > 1000 AND pib < 1000000000 union
    SELECT nom,region FROM cia WHERE superficie > 1000 AND pib < 1000000000

SELECT nom, region FROM bbc WHERE nom in(SELECT nom FROM cia)
renvoi le nom et region des elements commun au deux table

SELECT nom,region FROM bbc WHERE non not in(SELECT nom FROM cia)
renvoie tout les elements de bbc qui ne sont pas dans cia
bbc prive de cia

[a] SELECT count(nom) FROM cia WHERE nom not in(SELECT nom FROM bbc)
[b] SELECT count(nom) FROM bbc WHERE nom not in(SELECT nom FROM cia) AND pib < 1000000000

#####Question 8:
SELECT region FROM bbc

SELECT distinct region FROM bbc
on obtient les region mais en enlevant les doublons

[a] SELECT distinct region FROM cia
[b] SELECT distinct region FROM bbc WHERE pib <= 1000000000

SELECT nom,region FROM bbc ORDER BY superficie
renvoie les entre triee par superficie croissante

SELECT nom,region FROM bbc ORDER BY superficie desc
renvoie les entrees triees par superficie decroissante

[a] SELECT nom FROM bbc ORDER BY pib desc
[b] SELECT nom FROM bbc ORDER BY pib/population desc
[c] SELECT nom,region FROM bbc ORDER BY population/superficie

#####Question 9

[a] SELECT title FROM album WHERE artist = 'U2'
[b] SELECT title FROM album ORDER BY rdate
[c] SELECT title FROM album WHERE rdate LIKE'1991%'
[d] SELECT title FROM album ORDER BY rank desc
[e] SELECT title FROM album WHERE rank <= 100
[f] SELECT title FROM album ORDER BY rank LIMIT 100
[g] SELECT count(title) FROM album WHERE rank between 100 AND 1000
[h] SELECT title FROM album WHERE price
[i] SELECT title FROM album WHERE price > 30 AND rank > 3000
[j] SELECT title FROM album WHERE price < 15 AND rank < 1000 ORDER BY price
[k] SELECT count(distinct artist) FROM album WHERE rank < 5000
[i]

#####Question 10

SELECT * FROM track WHERE album in (SELECT asin FROM album WHERE rdate LIKE '1991%' )

##### Question 11

[a] SELECT song, title, artist FROM album JOIN track  ON album.asin = track.album
[b] SELECT song, title, artist FROM album JOIN track  ON album.asin = track.album WHERE song LIKE 'S%' AND artist LIKE 'B%'
[c] SELECT song, title, artist FROM album JOIN track  ON album.asin = track.album WHERE song LIKE '%Love%'
[d] SELECT song, title, artist FROM album JOIN track  ON album.asin = track.album WHERE song LIKE '%Love%' AND artist = 'The Beatles'
[e] SELECT title, style.style FROM album JOIN style  ON album.asin = style.album
[f] SELECT title, style.style, song  FROM album JOIN style  ON album.asin = style.album JOIN track ON track.album = album.asin

##### Question 12

SELECT * FROM track GROUP BY album HAVING MAX(posn) < posn

##### Question 13

SELECT title ,MAX(posn) AS pistes from album JOIN track ON asin = album group by album
SELECT artist from album JOIN track ON asin = album group by artist having MAX(disk)>1 AND artist like 'S%'
